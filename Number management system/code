
const fetch = require('isomorphic-fetch');
async function fetchURL(url) {
    try {
        const response = await fetch(url);
        if (response.ok) {
            const data = await response.json();
            return data;
        }
    } catch (error) {
        
    }
    return null;
}

async function fetchAndSortResponses(urls) {
    const uniqueNumbersSet = new Set();

    for (const url of urls) {
        const start = Date.now();
        const data = await fetchURL(url);
        const elapsed = Date.now() - start;

        if (elapsed <= 500 && data !== null) {
            const validNumbers = data.numbers.filter(number => Number.isInteger(number));
            validNumbers.forEach(number => uniqueNumbersSet.add(number));
        }
    }
    
    const sortedNumbersArray = [...uniqueNumbersSet].sort((a, b) => a - b);
    return sortedNumbersArray;
}

const targetUrls = [
    'http://20.244.56.144/numbers/primes',
    'http://20.244.56.144/numbers/fibo',
    'http://20.244.56.144/numbers/odd',
    'http://20.244.56.144/numbers/rand'
];

(async () => {
    const sortedUniqueNumbers = await fetchAndSortResponses(targetUrls);

    if (sortedUniqueNumbers.length > 0) {
        console.log('Sorted Numbers:', sortedUniqueNumbers);
    } else {
        console.log('No valid numbers found.');
    }
})();
